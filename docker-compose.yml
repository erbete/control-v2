version: "3.8"

services:
    dev-db:
        container_name: "control_dev"
        command: ["postgres", "-c", "log_statement=all"]
        image: postgres:alpine
        ports:
            - "5432:5432"
        environment:
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_USER: dev
            POSTGRES_PASS:
            POSTGRES_DB: control_dev
        volumes:
            - pgsql:/var/lib/postgresql/dev-data
        #   - ./server/src/Data/Queries/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - control

    test-db:
        container_name: "control_test"
        command: ["postgres", "-c", "log_statement=all", "-p 5433"]
        image: postgres:alpine
        ports:
            - "5433:5433"
        environment:
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_USER: test
            POSTGRES_PASS:
            POSTGRES_DB: control_test
        volumes:
            - pgsql:/var/lib/postgresql/test-data
        networks:
            - control

    mailcatcher:
        restart: on-failure
        image: dockage/mailcatcher:latest
        depends_on:
            dev-db:
                condition: "service_started"
        ports:
            - "1080:1080"
            - "1025:1025"

    mongodb:
        image: "mongo:6.0.6"
        volumes:
            - "mongodb_data:/data/db"
        restart: "on-failure"

    opensearch:
        image: "opensearchproject/opensearch:2.4.0"
        environment:
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
            - "bootstrap.memory_lock=true"
            - "discovery.type=single-node"
            - "action.auto_create_index=false"
            - "plugins.security.ssl.http.enabled=false"
            - "plugins.security.disabled=true"
        ulimits:
            memlock:
                hard: -1
                soft: -1
            nofile:
                soft: 65536
                hard: 65536
        volumes:
            - "os_data:/usr/share/opensearch/data"
        restart: "on-failure"

    graylog:
        hostname: "server"
        image: "${GRAYLOG_IMAGE:-graylog/graylog:5.1}"
        depends_on:
            opensearch:
                condition: "service_started"
            mongodb:
                condition: "service_started"
        entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
        environment:
            GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
            GRAYLOG_PASSWORD_SECRET: "somepasswordpepper"
            GRAYLOG_ROOT_PASSWORD_SHA2: "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"
            # GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
            # GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}"
            GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
            GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
            GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
            GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
        ports:
        - "5044:5044/tcp"   # Beats
        - "5140:5140/udp"   # Syslog
        - "5140:5140/tcp"   # Syslog
        - "5555:5555/tcp"   # RAW TCP
        - "5555:5555/udp"   # RAW TCP
        - "9000:9000/tcp"   # Server API
        - "12201:12201/tcp" # GELF TCP
        - "12201:12201/udp" # GELF UDP
        #- "10000:10000/tcp" # Custom TCP port
        #- "10000:10000/udp" # Custom UDP port
        - "13301:13301/tcp" # Forwarder data
        - "13302:13302/tcp" # Forwarder config
        volumes:
            - "graylog_data:/usr/share/graylog/data/data"
            - "graylog_journal:/usr/share/graylog/data/journal"
        restart: "on-failure"

    cache:
        image: "redis:latest"
        container_name: redis
        command: redis-server --requirepass dev
        ports:
            - "6379:6379"
        volumes:
            - redis:/root/redis

networks:
    control:


volumes:
    pgsql:
    os_data:
    mongodb_data:
    graylog_data:
    graylog_journal:
    redis:
